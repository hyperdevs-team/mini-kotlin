import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

/*
 * Copyright 2021 HyperDevs
 *
 * Copyright 2020 BQ
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: "kotlin"
apply plugin: "kotlin-kapt"
apply from: "../jitpack.gradle"

ext {
    kotlinpoet_version = "1.14.2"
    auto_version = "1.2.2"
    incap_version = "1.0.0"
    google_testing_version = "0.21.0"
}

dependencies {
    api project(':mini-common')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "com.squareup:kotlinpoet:$kotlinpoet_version"
    implementation "com.squareup:kotlinpoet-ksp:$kotlinpoet_version"

    implementation "com.google.auto:auto-common:$auto_version"

    // Lib to add incremental annotation processing
    compileOnly "net.ltgt.gradle.incap:incap:$incap_version"
    kapt "net.ltgt.gradle.incap:incap-processor:$incap_version"

    testImplementation "junit:junit:$junit_version"
    testImplementation "com.google.testing.compile:compile-testing:$google_testing_version"

    implementation "com.google.devtools.ksp:symbol-processing-api:$ksp_version"
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "17"
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}